package be.kuleuven.gent.project.rest;

import java.net.URI;
import java.security.Principal;
import java.util.List;

import javax.ejb.EJB;
import javax.ws.rs.BadRequestException;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;
import javax.ws.rs.core.UriInfo;
import javax.ws.rs.core.MediaType;

import be.kuleuven.gent.project.data.Person;
import be.kuleuven.gent.project.data.Task;
import be.kuleuven.gent.project.ejb.TaskManagementEJBLocal;
import be.kuleuven.gent.project.ejb.UserManagementEJBLocal;

@javax.enterprise.context.RequestScoped
@Path("task_service")
@Produces({MediaType.APPLICATION_JSON})
@Consumes({MediaType.APPLICATION_JSON})
public class FiliaalRestService {

	@EJB
	private TaskManagementEJBLocal taskRepo;
	
	@EJB
	private UserManagementEJBLocal userRepo;
	
	@Context
	private UriInfo uriInfo;
	
	@Context
	private SecurityContext ctx;

	@POST
	@JWTTokenNeeded
	public Response createTask(Task task) {
		if (task == null)
			throw new BadRequestException();
		
		taskRepo.createTask(task);
		URI taskUri = uriInfo.getAbsolutePathBuilder().path(task.getId().toString()).build();
		return Response.created(taskUri).build();
	}

	@GET
	@JWTTokenNeeded
	public Response getTasks() {
		
		Principal p = ctx.getUserPrincipal();
		Person person = userRepo.findPerson(p.getName());
		
		List<Task> tasks = taskRepo.findIncompletedPatientTasks(person);
		return Response.ok(tasks).build();
	}
	
}
